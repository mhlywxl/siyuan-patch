name: release-assets

on:
  workflow_dispatch:
    inputs:
      version:
        description: "release version/tag"
        required: true
      packageManager:
        description: "pnpm@x.x.x"
        required: true

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          path: siyuan-note

      - name: clone origin and apply patches
        run: |
          mkdir -p ${{ github.workspace }}/opt
          mkdir -p ${{ github.workspace }}/go
          cd ${{ github.workspace }}/siyuan-note/
          git clone --branch ${{ github.event.inputs.version }} --depth=1 https://github.com/siyuan-note/siyuan.git
          cd siyuan
          git apply ${{ github.workspace }}/siyuan-note/patches/siyuan/disable-update.patch
          git apply ${{ github.workspace }}/siyuan-note/patches/siyuan/default-config.patch
          git apply ${{ github.workspace }}/siyuan-note/patches/siyuan/mock-vip-user.patch
          git status
          cd ..


#          mkdir -p /mnt/f/
#
#          git clone --branch main --depth=1 https://github.com/harmony-contrib/log-adaptor.git /mnt/f/
#          wget https://github.com/mhlywxl/siyuan-patch/releases/download/v3.1.32/ohos-linux.tar
#          tar -xvf ohos-linux.tar -C /mnt/f/
#          rm -rf ohos-linux.tar
      # 缓存 ohos-linux.tar
      - name: Cache OpenHarmony SDK
        id: cache-sdk
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/siyuan-note/ohos-sdk/
          key: ${{ runner.os }}-openharmony-sdk-5.0.3-Release
          restore-keys: |
            ${{ runner.os }}-openharmony-sdk-
      - name: Create ohos-sdk directory
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ github.workspace }}/siyuan-note/ohos-sdk/
        shell: bash

      - name: Download OpenHarmony SDK
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        working-directory: ${{ github.workspace }}/siyuan-note/ohos-sdk/
        run: |
          rm -rf ohos-sdk linux *.tar.gz
          # 下载 OpenHarmony SDK
          #wget https://cidownload.openharmony.cn/version/Master_Version/OpenHarmony_5.1.0.54/20250313_021647/version-Master_Version-OpenHarmony_5.1.0.54-20250313_021647-ohos-sdk-public.tar.gz
          #wget https://repo.huaweicloud.com/openharmony/os/5.1.0-Release/ohos-sdk-windows_linux-public.tar.gz
          wget https://repo.huaweicloud.com/openharmony/os/5.0.3-Release/ohos-sdk-windows_linux-public.tar.gz
          #wget https://repo.huaweicloud.com/openharmony/os/5.1.0-Release/ohos-sdk-windows_linux-public.tar.gz
          
          tar -xzvf *.tar.gz
          rm *.tar.gz
          ls -lh ohos-sdk
          rm -rf ohos-sdk/windows ohos-sdk/ohos
          mv ohos-sdk/linux ./
          cd linux && for i in *.zip;do unzip $i;done && rm *.zip

      - name: unzip ohos-sdk
        working-directory: ${{ github.workspace }}/siyuan-note/ohos-sdk/
        run: |
          ls -lh
          ls -lh ohos-sdk
          # #rm -rf linux windows linux.tar
          # rm -rf linux 
          # ls -lh ohos-sdk
          # cd ohos-sdk
          
          #tar -xzvf *.tar.gz
          # cd linux && for i in *.zip;do unzip $i;done && rm *.zip 
          # cd ../
          # mv linux ../
          # ls -lh
        shell: bash

#      - name: unzip go-sdk
#        working-directory: ${{ github.workspace }}/siyuan-note/opt/
#        run: |
#          wget https://dl.google.com/go/go1.24.4.linux-amd64.tar.gz
#          rm -rf /usr/local/go
#          tar -C /usr/local -xzf go1.24.4.linux-amd64.tar.gz
#          rm go1.24.4.linux-amd64.tar.gz
#          echo "export PATH=$PATH:/usr/local/go/bin" >> ~/.bashrc
#
#        shell: bash
      # 克隆 log-adaptor
      - name: Clone log-adaptor
        run: |
          pwd
          mkdir -p ${{ github.workspace }}/siyuan-note/mnt/f/log-adaptor
          git clone --branch main --depth=1 https://github.com/harmony-contrib/log-adaptor.git ${{ github.workspace }}/siyuan-note/mnt/f/log-adaptor
          ls -lh ${{ github.workspace }}/siyuan-note/mnt/f/

      - name: clone siyuan-harmony
        run: |
          pwd
          mkdir -p ${{ github.workspace }}/siyuan-note/mnt/f/log-adaptor
          
          cd ${{ github.workspace }}/siyuan-note/
          git clone --branch main --depth=1 https://github.com/siyuan-note/siyuan-harmony.git
          ls -lh
          cd siyuan-harmony

          #git apply ${{ github.workspace }}/siyuan-note/patches/siyuan-harmony/debug-build.patch

          mkdir -p entry/libs/
          cp -r ${{ github.workspace }}/siyuan-note/mnt/f/log-adaptor/dist/arm64-v8a ${{ github.workspace }}/siyuan-note/mnt/f/log-adaptor/dist/x86_64 entry/libs/
          ls -lh entry/libs/
          mkdir -p entry/src/main/resources/rawfile/
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ github.workspace }}/siyuan-note/siyuan/kernel/go.mod
          cache-dependency-path: "**/*.sum"
      - run: |
          go version
          whereis go
          GO_VERSION=$(go version | grep -o 'go[0-9.]*' | sed 's/go//')
          SED_PATH="/opt/hostedtoolcache/go/$GO_VERSION/x64/src/net/cgo_resold.go"
          echo $SED_PATH
          # 修改 go 源码,将cgo_resold.go中的size_t替换为socklen_t
          sed -i 's/size_t/socklen_t/g' "$SED_PATH"
          cd ${{ github.workspace }}/siyuan-note/siyuan/kernel/harmony
          
          export OHOS_NDK_HOME=${{ github.workspace }}/siyuan-note/ohos-sdk/linux/
          export LOG_ADAPTOR_HOME=${{ github.workspace }}/siyuan-note/mnt/f/log-adaptor
          
          sed -i '/^export OHOS_NDK_HOME/s/^/# /' build.sh
          sed -i '/^export OHOS_NDK_HOME/s/^/# /' build-win.sh
          sed -i '/^export LOG_ADAPTOR_HOME/s/^/# /' build.sh
          sed -i '/^export LOG_ADAPTOR_HOME/s/^/# /' build-win.sh
          
          cat build.sh
          cat build-win.sh
          
          ./build.sh && mv libkernel.so ${{ github.workspace }}/siyuan-note/siyuan-harmony/entry/libs/arm64-v8a/
          ./build-win.sh && mv libkernel.so ${{ github.workspace }}/siyuan-note/siyuan-harmony/entry/libs/x86_64/


      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node pnpm
        run: npm install -g ${{ github.event.inputs.packageManager }}
        working-directory: ${{ github.workspace }}/siyuan-note/siyuan/app

      - name: Install Node Dependencies
        run: pnpm install --no-frozen-lockfile
        working-directory: ${{ github.workspace }}/siyuan-note/siyuan/app

      - name: Building UI
        run: pnpm run build
        working-directory: ${{ github.workspace }}/siyuan-note/siyuan/app

      - name: ui assets
        working-directory: ${{ github.workspace }}/siyuan-note/siyuan/app/
        run: |
          zip -r ${{ github.workspace }}/siyuan-note/app.zip ./appearance ./guide ./stage ./changelogs

      - name: harmony libs
        working-directory: ${{ github.workspace }}/siyuan-note/siyuan-harmony/entry
        run: |
          zip -r ${{ github.workspace }}/siyuan-note/libs.zip ./libs

      - uses: joutvhu/get-release@v1
        id: get_current_release
        with:
          tag_name: ${{ github.event.inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_current_release.outputs.upload_url }}
          asset_name: siyuan-${{ github.event.inputs.version }}-app.zip
          asset_path: ${{ github.workspace }}/siyuan-note/app.zip
          asset_content_type: application/octet-stream
          overwrite: true

      - name: Upload libs
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_current_release.outputs.upload_url }}
          asset_name: siyuan-${{ github.event.inputs.version }}-libs.zip
          asset_path: ${{ github.workspace }}/siyuan-note/libs.zip
          asset_content_type: application/octet-stream
          overwrite: true
